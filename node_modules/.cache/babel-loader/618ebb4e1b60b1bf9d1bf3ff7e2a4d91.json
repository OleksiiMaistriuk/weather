{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\weather\\\\src\\\\pages\\\\Home\\\\Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useCustomDispatch, useCustomSelector } from '../../hooks/store';\nimport { fetchCurrentWeather } from '../../store/thunks/fetchCurrentWeather';\nimport { Days } from './components/Days/Days';\nimport { ThisDay } from './components/ThisDay/ThisDay';\nimport { ThisDayInfo } from './components/ThisDayInfo/ThisDayInfo';\nimport s from './Home.module.scss';\nimport { selectCurrentWeatherData } from '../../store/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar error = Simulate.error;\nexport const Home = props => {\n  _s();\n\n  const [query, setQuery] = useState('London');\n  const dispatch = useCustomDispatch();\n  const opts = {\n    enableHighAccuracy: true,\n    timeout: 1000 * 10,\n    maximumAge: 1000 * 60 * 5\n  };\n\n  const wtf = err => {\n    return console.error(err);\n  };\n\n  const ftw = position => {\n    return console.error(err);\n  };\n\n  useEffect(() => {\n    const location = navigator.geolocation.getCurrentPosition(ftw(e), wtf(error), opts);\n    console.log(location);\n  }, []);\n  const {\n    weather\n  } = useCustomSelector(selectCurrentWeatherData);\n\n  const searchWeather = e => {\n    if (e.key === 'Enter' && query) {\n      dispatch(fetchCurrentWeather(`${query}`));\n      setQuery('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.home,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: s.input,\n      type: \"text\",\n      placeholder: \"Search...\",\n      onChange: e => e ? setQuery(e.target.value) : '',\n      value: query,\n      onKeyPress: searchWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(ThisDay, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThisDayInfo, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Days, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"UtB1n59eQbCobe20dBsO5PFSwww=\", false, function () {\n  return [useCustomDispatch, useCustomSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/apps/weather/src/pages/Home/Home.tsx"],"names":["React","useEffect","useState","useCustomDispatch","useCustomSelector","fetchCurrentWeather","Days","ThisDay","ThisDayInfo","s","selectCurrentWeatherData","error","Simulate","Home","props","query","setQuery","dispatch","opts","enableHighAccuracy","timeout","maximumAge","wtf","err","console","ftw","position","location","navigator","geolocation","getCurrentPosition","e","log","weather","searchWeather","key","home","input","target","value","wrapper"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AACA,SAASC,mBAAT,QAAoC,wCAApC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,SAASC,wBAAT,QAAyC,uBAAzC;;IAEOC,K,GAAQC,Q,CAASD,K;AAIxB,OAAO,MAAME,IAAI,GAAIC,KAAD,IAAkB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,QAAD,CAAlC;AACA,QAAMe,QAAQ,GAAGd,iBAAiB,EAAlC;AACA,QAAMe,IAAI,GAAG;AACXC,IAAAA,kBAAkB,EAAE,IADT;AAEXC,IAAAA,OAAO,EAAE,OAAO,EAFL;AAGXC,IAAAA,UAAU,EAAE,OAAO,EAAP,GAAY;AAHb,GAAb;;AAKA,QAAMC,GAAG,GAAIC,GAAD,IAAc;AACxB,WAAOC,OAAO,CAACb,KAAR,CAAcY,GAAd,CAAP;AACD,GAFD;;AAGA,QAAME,GAAG,GAAIC,QAAD,IAAmB;AAC7B,WAAOF,OAAO,CAACb,KAAR,CAAcY,GAAd,CAAP;AACD,GAFD;;AAGAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,QAAQ,GAAGC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACfL,GAAG,CAACM,CAAD,CADY,EAEfT,GAAG,CAACX,KAAD,CAFY,EAGfO,IAHe,CAAjB;AAKAM,IAAAA,OAAO,CAACQ,GAAR,CAAYL,QAAZ;AACD,GAPQ,EAON,EAPM,CAAT;AASA,QAAM;AAAEM,IAAAA;AAAF,MAAc7B,iBAAiB,CAACM,wBAAD,CAArC;;AAEA,QAAMwB,aAAa,GAAIH,CAAD,IAAY;AAChC,QAAIA,CAAC,CAACI,GAAF,KAAU,OAAV,IAAqBpB,KAAzB,EAAgC;AAC9BE,MAAAA,QAAQ,CAACZ,mBAAmB,CAAE,GAAEU,KAAM,EAAV,CAApB,CAAR;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEP,CAAC,CAAC2B,IAAlB;AAAA,4BACE;AACE,MAAA,SAAS,EAAE3B,CAAC,CAAC4B,KADf;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,WAHd;AAIE,MAAA,QAAQ,EAAEN,CAAC,IAAKA,CAAC,GAAIf,QAAQ,CAACe,CAAC,CAACO,MAAF,CAASC,KAAV,CAAZ,GAA+B,EAJlD;AAKE,MAAA,KAAK,EAAExB,KALT;AAME,MAAA,UAAU,EAAEmB;AANd;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAEzB,CAAC,CAAC+B,OAAlB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEP;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAaE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAjDM;;GAAMpB,I;UAEMV,iB,EAqBGC,iB;;;KAvBTS,I","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useCustomDispatch, useCustomSelector } from '../../hooks/store';\nimport { fetchCurrentWeather } from '../../store/thunks/fetchCurrentWeather';\nimport { Days } from './components/Days/Days';\nimport { ThisDay } from './components/ThisDay/ThisDay';\nimport { ThisDayInfo } from './components/ThisDayInfo/ThisDayInfo';\nimport s from './Home.module.scss';\nimport { selectCurrentWeatherData } from '../../store/selectors';\nimport { Simulate } from 'react-dom/test-utils';\nimport error = Simulate.error;\n\ninterface Props {}\n\nexport const Home = (props: Props) => {\n  const [query, setQuery] = useState('London');\n  const dispatch = useCustomDispatch();\n  const opts = {\n    enableHighAccuracy: true,\n    timeout: 1000 * 10,\n    maximumAge: 1000 * 60 * 5,\n  };\n  const wtf = (err: any) => {\n    return console.error(err);\n  };\n  const ftw = (position: any) => {\n    return console.error(err);\n  };\n  useEffect(() => {\n    const location = navigator.geolocation.getCurrentPosition(\n      ftw(e),\n      wtf(error),\n      opts,\n    );\n    console.log(location);\n  }, []);\n\n  const { weather } = useCustomSelector(selectCurrentWeatherData);\n\n  const searchWeather = (e: any) => {\n    if (e.key === 'Enter' && query) {\n      dispatch(fetchCurrentWeather(`${query}`));\n      setQuery('');\n    }\n  };\n\n  return (\n    <div className={s.home}>\n      <input\n        className={s.input}\n        type=\"text\"\n        placeholder=\"Search...\"\n        onChange={e => (e! ? setQuery(e.target.value) : '')}\n        value={query}\n        onKeyPress={searchWeather}\n      />\n      <div className={s.wrapper}>\n        <ThisDay weather={weather} />\n        <ThisDayInfo weather={weather} />\n      </div>\n      <Days />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}