{"ast":null,"code":"import _slicedToArray from\"C:\\\\apps\\\\weather\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useEffect,useState}from'react';import{AsyncPaginate}from'react-select-async-paginate';import loadOptions from'./loadOptions';import{useCustomDispatch}from'hooks/store';import{fetchCurrentWeather}from'store/thunks/fetchCurrentWeather';import{jsx as _jsx}from\"react/jsx-runtime\";export var Search=function Search(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),searchData=_useState2[0],onSearchData=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),coordinates=_useState4[0],setCoordinates=_useState4[1];var dispatch=useCustomDispatch();useEffect(function(){if(coordinates){dispatch(fetchCurrentWeather(coordinates));console.log('coordinates',coordinates);}if(searchData){setCoordinates(searchData.value);console.log('searchData.value',searchData.value);}},[searchData,coordinates,dispatch]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AsyncPaginate,{placeholder:\"Search the city\",debounceTimeout:600,value:searchData,onChange:onSearchData,loadOptions:loadOptions})});};","map":{"version":3,"sources":["C:/apps/weather/src/pages/Home/components/Search/Search.tsx"],"names":["useEffect","useState","AsyncPaginate","loadOptions","useCustomDispatch","fetchCurrentWeather","Search","searchData","onSearchData","coordinates","setCoordinates","dispatch","console","log","value"],"mappings":"6GAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,aAAT,KAA8B,6BAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,OAASC,iBAAT,KAAkC,aAAlC,CACA,OAASC,mBAAT,KAAoC,kCAApC,C,2CAGA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CAC1B,cAAmCL,QAAQ,EAA3C,wCAAOM,UAAP,eAAmBC,YAAnB,eACA,eAAsCP,QAAQ,EAA9C,yCAAOQ,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,QAAQ,CAAGP,iBAAiB,EAAlC,CAEAJ,SAAS,CAAC,UAAM,CACd,GAAIS,WAAJ,CAAiB,CACfE,QAAQ,CAACN,mBAAmB,CAACI,WAAD,CAApB,CAAR,CACAG,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BJ,WAA3B,EACD,CACD,GAAIF,UAAJ,CAAgB,CACdG,cAAc,CAACH,UAAU,CAACO,KAAZ,CAAd,CACAF,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCN,UAAU,CAACO,KAA3C,EACD,CACF,CATQ,CASN,CAACP,UAAD,CAAaE,WAAb,CAA0BE,QAA1B,CATM,CAAT,CAWA,mBACE,kCACE,KAAC,aAAD,EACE,WAAW,CAAC,iBADd,CAEE,eAAe,CAAE,GAFnB,CAGE,KAAK,CAAEJ,UAHT,CAIE,QAAQ,CAAEC,YAJZ,CAKE,WAAW,CAAEL,WALf,EADF,EADF,CAWD,CA5BM","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { AsyncPaginate } from 'react-select-async-paginate';\r\nimport loadOptions from './loadOptions';\r\n\r\nimport { useCustomDispatch } from 'hooks/store';\r\nimport { fetchCurrentWeather } from 'store/thunks/fetchCurrentWeather';\r\nimport { ICoordinates, IMyOption } from 'store/types/types';\r\n\r\nexport const Search = () => {\r\n  const [searchData, onSearchData] = useState<IMyOption | null>();\r\n  const [coordinates, setCoordinates] = useState<ICoordinates | undefined>();\r\n\r\n  const dispatch = useCustomDispatch();\r\n\r\n  useEffect(() => {\r\n    if (coordinates) {\r\n      dispatch(fetchCurrentWeather(coordinates));\r\n      console.log('coordinates', coordinates);\r\n    }\r\n    if (searchData) {\r\n      setCoordinates(searchData.value);\r\n      console.log('searchData.value', searchData.value);\r\n    }\r\n  }, [searchData, coordinates, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <AsyncPaginate\r\n        placeholder=\"Search the city\"\r\n        debounceTimeout={600}\r\n        value={searchData}\r\n        onChange={onSearchData}\r\n        loadOptions={loadOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}