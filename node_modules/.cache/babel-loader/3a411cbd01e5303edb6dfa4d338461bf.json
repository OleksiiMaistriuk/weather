{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var initialState={weather:{weather:[{description:'',icon:'',id:0,main:''}],name:'',main:{temp:0,feels_like:0,humidity:0,pressure:0,temp_max:0,temp_min:0},sys:{country:''},wind:{deg:0,speed:0}},isLoading:false,response:{status:0,message:''}};export var currentWeatherSlice=createSlice({name:'current_weather',initialState:initialState,reducers:{fetchCurrentWeather:function fetchCurrentWeather(state){state.isLoading=true;},fetchCurrentWeatherSuccess:function fetchCurrentWeatherSuccess(state,action){state.weather=action.payload.data;state.isLoading=false;state.response={status:action.payload.status,message:action.payload.statusText};},fetchCurrentWeatherError:function fetchCurrentWeatherError(state,action){state.isLoading=false;state.response={status:action.payload.status,message:action.payload.statusText};}}});export default currentWeatherSlice.reducer;","map":{"version":3,"sources":["C:/apps/weather/src/store/slices/currentWeatherSlice.tsx"],"names":["createSlice","initialState","weather","description","icon","id","main","name","temp","feels_like","humidity","pressure","temp_max","temp_min","sys","country","wind","deg","speed","isLoading","response","status","message","currentWeatherSlice","reducers","fetchCurrentWeather","state","fetchCurrentWeatherSuccess","action","payload","data","statusText","fetchCurrentWeatherError","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CAeA,GAAMC,CAAAA,YAA4B,CAAG,CACnCC,OAAO,CAAE,CACPA,OAAO,CAAE,CACP,CACEC,WAAW,CAAE,EADf,CAEEC,IAAI,CAAE,EAFR,CAGEC,EAAE,CAAE,CAHN,CAIEC,IAAI,CAAE,EAJR,CADO,CADF,CASPC,IAAI,CAAE,EATC,CAUPD,IAAI,CAAE,CACJE,IAAI,CAAE,CADF,CAEJC,UAAU,CAAE,CAFR,CAGJC,QAAQ,CAAE,CAHN,CAIJC,QAAQ,CAAE,CAJN,CAKJC,QAAQ,CAAE,CALN,CAMJC,QAAQ,CAAE,CANN,CAVC,CAkBPC,GAAG,CAAE,CAAEC,OAAO,CAAE,EAAX,CAlBE,CAmBPC,IAAI,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,CAAjB,CAnBC,CAD0B,CAsBnCC,SAAS,CAAE,KAtBwB,CAuBnCC,QAAQ,CAAE,CACRC,MAAM,CAAE,CADA,CAERC,OAAO,CAAE,EAFD,CAvByB,CAArC,CA6BA,MAAO,IAAMC,CAAAA,mBAAmB,CAAGvB,WAAW,CAAC,CAC7CO,IAAI,CAAE,iBADuC,CAE7CN,YAAY,CAAZA,YAF6C,CAG7CuB,QAAQ,CAAE,CACRC,mBADQ,8BACYC,KADZ,CACmB,CACzBA,KAAK,CAACP,SAAN,CAAkB,IAAlB,CACD,CAHO,CAIRQ,0BAJQ,qCAKND,KALM,CAMNE,MANM,CAON,CACAF,KAAK,CAACxB,OAAN,CAAgB0B,MAAM,CAACC,OAAP,CAAeC,IAA/B,CACAJ,KAAK,CAACP,SAAN,CAAkB,KAAlB,CACAO,KAAK,CAACN,QAAN,CAAiB,CACfC,MAAM,CAAEO,MAAM,CAACC,OAAP,CAAeR,MADR,CAEfC,OAAO,CAAEM,MAAM,CAACC,OAAP,CAAeE,UAFT,CAAjB,CAID,CAdO,CAeRC,wBAfQ,mCAgBNN,KAhBM,CAiBNE,MAjBM,CAkBN,CACAF,KAAK,CAACP,SAAN,CAAkB,KAAlB,CACAO,KAAK,CAACN,QAAN,CAAiB,CACfC,MAAM,CAAEO,MAAM,CAACC,OAAP,CAAeR,MADR,CAEfC,OAAO,CAAEM,MAAM,CAACC,OAAP,CAAeE,UAFT,CAAjB,CAID,CAxBO,CAHmC,CAAD,CAAvC,CA+BP,cAAeR,CAAAA,mBAAmB,CAACU,OAAnC","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AxiosResponse } from 'axios';\nimport { Weather } from '../types/types';\n\ntype CurrentWeather = {\n  weather: Weather;\n  isLoading: boolean;\n  response: Response;\n};\n\ntype Response = {\n  status: number;\n  message: string;\n};\n\nconst initialState: CurrentWeather = {\n  weather: {\n    weather: [\n      {\n        description: '',\n        icon: '',\n        id: 0,\n        main: '',\n      },\n    ],\n    name: '',\n    main: {\n      temp: 0,\n      feels_like: 0,\n      humidity: 0,\n      pressure: 0,\n      temp_max: 0,\n      temp_min: 0,\n    },\n    sys: { country: '' },\n    wind: { deg: 0, speed: 0 },\n  },\n  isLoading: false,\n  response: {\n    status: 0,\n    message: '',\n  },\n};\n\nexport const currentWeatherSlice = createSlice({\n  name: 'current_weather',\n  initialState,\n  reducers: {\n    fetchCurrentWeather(state) {\n      state.isLoading = true;\n    },\n    fetchCurrentWeatherSuccess(\n      state,\n      action: PayloadAction<AxiosResponse<Weather>>,\n    ) {\n      state.weather = action.payload.data;\n      state.isLoading = false;\n      state.response = {\n        status: action.payload.status,\n        message: action.payload.statusText,\n      };\n    },\n    fetchCurrentWeatherError(\n      state,\n      action: PayloadAction<AxiosResponse<Weather>>,\n    ) {\n      state.isLoading = false;\n      state.response = {\n        status: action.payload.status,\n        message: action.payload.statusText,\n      };\n    },\n  },\n});\n\nexport default currentWeatherSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}