{"ast":null,"code":"import _slicedToArray from \"C:\\\\apps\\\\weather\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\apps\\\\weather\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\apps\\\\weather\\\\src\\\\provider\\\\ThemeProvider.tsx\";\n\nimport { useState } from 'react';\nimport { Theme } from '../context/ThemeContext';\nimport { changeCssRootVariables } from '../model/ChangeCssRootVariables';\nimport { storage } from '../model/storage';\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState(storage.getItem('theme') || Theme.LIGHT),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  changeCssRootVariables(theme);\n\n  function changeTheme(theme) {\n    storage.setItem('theme', theme);\n    setTheme(theme);\n    changeCssRootVariables(theme);\n  }\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, Object.assign({\n    value: {\n      theme: theme,\n      changeTheme: changeTheme\n    }\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), children);\n};","map":{"version":3,"names":["useState","Theme","changeCssRootVariables","storage","ThemeProvider","children","props","getItem","LIGHT","theme","setTheme","changeTheme","setItem"],"sources":["C:/apps/weather/src/provider/ThemeProvider.tsx"],"sourcesContent":["import { ReactNode, useState } from 'react';\r\nimport { Theme } from '../context/ThemeContext';\r\nimport { changeCssRootVariables } from '../model/ChangeCssRootVariables';\r\nimport { storage } from '../model/storage';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThemeProvider = ({ children, ...props }: Props) => {\r\n  const [theme, setTheme] = useState<Theme>(\r\n    storage.getItem('theme') || Theme.LIGHT,\r\n  );\r\n  changeCssRootVariables(theme);\r\n  function changeTheme(theme: Theme) {\r\n    storage.setItem('theme', theme);\r\n    setTheme(theme);\r\n    changeCssRootVariables(theme);\r\n  }\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        changeTheme,\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;;;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,sBAAT,QAAuC,iCAAvC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAMA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAmC;EAAA,IAAhCC,QAAgC,QAAhCA,QAAgC;EAAA,IAAnBC,KAAmB;;EAAA,gBACpCN,QAAQ,CAChCG,OAAO,CAACI,OAAR,CAAgB,OAAhB,KAA4BN,KAAK,CAACO,KADF,CAD4B;EAAA;EAAA,IACvDC,KADuD;EAAA,IAChDC,QADgD;;EAI9DR,sBAAsB,CAACO,KAAD,CAAtB;;EACA,SAASE,WAAT,CAAqBF,KAArB,EAAmC;IACjCN,OAAO,CAACS,OAAR,CAAgB,OAAhB,EAAyBH,KAAzB;IACAC,QAAQ,CAACD,KAAD,CAAR;IACAP,sBAAsB,CAACO,KAAD,CAAtB;EACD;;EACD,oBACE,oBAAC,YAAD,CAAc,QAAd;IACE,KAAK,EAAE;MACLA,KAAK,EAALA,KADK;MAELE,WAAW,EAAXA;IAFK;EADT,GAKML,KALN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAOGD,QAPH,CADF;AAWD,CArBM"},"metadata":{},"sourceType":"module"}