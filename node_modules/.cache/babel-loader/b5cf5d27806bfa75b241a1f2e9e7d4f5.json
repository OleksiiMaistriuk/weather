{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\weather\\\\src\\\\pages\\\\Home\\\\components\\\\Search\\\\Search.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { AsyncPaginate } from 'react-select-async-paginate';\nimport loadOptions from './loadOptions';\nimport { useCustomDispatch } from 'hooks/store';\nimport { fetchCurrentWeather } from 'store/thunks/fetchCurrentWeather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n\n  const [searchData, onSearchData] = useState({\n    label: 'London'\n  });\n  const [coordinates, setCoordinates] = useState(searchData === null || searchData === void 0 ? void 0 : searchData.value);\n  const dispatch = useCustomDispatch();\n  useEffect(() => {\n    if (coordinates) {\n      dispatch(fetchCurrentWeather(coordinates));\n      console.log('coordinates', coordinates);\n    } // if (searchData) {\n    //   setCoordinates(searchData.value);\n    //   console.log('searchData.value', searchData.value);\n    // }\n\n  }, [searchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n      placeholder: \"Search the city\",\n      debounceTimeout: 600,\n      value: searchData,\n      onChange: onSearchData,\n      loadOptions: loadOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"5fNOyTYVJk7TywpY+LTWMtxa9kc=\", false, function () {\n  return [useCustomDispatch];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/apps/weather/src/pages/Home/components/Search/Search.tsx"],"names":["useEffect","useState","AsyncPaginate","loadOptions","useCustomDispatch","fetchCurrentWeather","Search","searchData","onSearchData","label","coordinates","setCoordinates","value","dispatch","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,mBAAT,QAAoC,kCAApC;;AAGA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BP,QAAQ,CAAmB;AAC5DQ,IAAAA,KAAK,EAAE;AADqD,GAAnB,CAA3C;AAGA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAC5CM,UAD4C,aAC5CA,UAD4C,uBAC5CA,UAAU,CAAEK,KADgC,CAA9C;AAIA,QAAMC,QAAQ,GAAGT,iBAAiB,EAAlC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,WAAJ,EAAiB;AACfG,MAAAA,QAAQ,CAACR,mBAAmB,CAACK,WAAD,CAApB,CAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,WAA3B;AACD,KAJa,CAKd;AACA;AACA;AACA;;AACD,GATQ,EASN,CAACH,UAAD,CATM,CAAT;AAWA,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,WAAW,EAAC,iBADd;AAEE,MAAA,eAAe,EAAE,GAFnB;AAGE,MAAA,KAAK,EAAEA,UAHT;AAIE,MAAA,QAAQ,EAAEC,YAJZ;AAKE,MAAA,WAAW,EAAEL;AALf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAhCM;;GAAMG,M;UAQMF,iB;;;KARNE,M","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { AsyncPaginate } from 'react-select-async-paginate';\r\nimport loadOptions from './loadOptions';\r\n\r\nimport { useCustomDispatch } from 'hooks/store';\r\nimport { fetchCurrentWeather } from 'store/thunks/fetchCurrentWeather';\r\nimport { ICoordinates, IMyOption } from 'store/types/types';\r\n\r\nexport const Search = () => {\r\n  const [searchData, onSearchData] = useState<IMyOption | null>({\r\n    label: 'London',\r\n  });\r\n  const [coordinates, setCoordinates] = useState<ICoordinates | undefined>(\r\n    searchData?.value,\r\n  );\r\n\r\n  const dispatch = useCustomDispatch();\r\n\r\n  useEffect(() => {\r\n    if (coordinates) {\r\n      dispatch(fetchCurrentWeather(coordinates));\r\n      console.log('coordinates', coordinates);\r\n    }\r\n    // if (searchData) {\r\n    //   setCoordinates(searchData.value);\r\n    //   console.log('searchData.value', searchData.value);\r\n    // }\r\n  }, [searchData]);\r\n\r\n  return (\r\n    <div>\r\n      <AsyncPaginate\r\n        placeholder=\"Search the city\"\r\n        debounceTimeout={600}\r\n        value={searchData}\r\n        onChange={onSearchData}\r\n        loadOptions={loadOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}