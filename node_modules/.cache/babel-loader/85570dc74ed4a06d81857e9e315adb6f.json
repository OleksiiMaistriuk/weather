{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\weather\\\\src\\\\pages\\\\Home\\\\components\\\\Search\\\\Search.tsx\",\n    _s = $RefreshSig$();\n\nimport { AsyncPaginate } from 'react-select-async-paginate';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = onSearchChange => {\n  _s();\n\n  const [search, setSearch] = useState('');\n\n  const handleChange = searchData => {\n    setSearch(searchData);\n  }; // @ts-ignore\n  // @ts-ignore\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n      placeholder: \"Search the city\",\n      debounceTimeout: 600,\n      value: search,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");\n\n_c = Search;\nSearch.propTypes = {\n  regionName: PropTypes.string.isRequired,\n  value: PropTypes.object,\n  handleChange: PropTypes.func\n}; // const SelectAsyncPaginate = props => {\n//   const [regionName, setRegionName] = useState(null);\n//\n//   useEffect(() => {\n//     setRegionName(props.regionName);\n//   }, [props.regionName]);\n//\n//   const loadOptions = async (searchQuery, loadedOptions, { page }) => {\n//     console.log(searchQuery);\n//\n//     const response = await fetch(\n//       `https://www.anapioficeandfire.com/api/houses?region=${regionName}&page=${page}&pageSize=10`,\n//     );\n//     const responseJSON = await response.json();\n//\n//     return {\n//       options: responseJSON,\n//       hasMore: responseJSON.length >= 1,\n//       additional: {\n//         page: searchQuery ? 2 : page + 1,\n//       },\n//     };\n//   };\n//\n//   const onChange = option => {\n//     if (typeof props.onChange === 'function') {\n//       props.onChange(option);\n//     }\n//   };\n//\n//   return (\n//     <AsyncPaginate\n//       key={JSON.stringify(regionName)}\n//       value={props.value || ''}\n//       loadOptions={loadOptions}\n//       getOptionValue={option => option.name}\n//       getOptionLabel={option => option.name}\n//       onChange={onChange}\n//       isSearchable={true}\n//       placeholder=\"Select House\"\n//       additional={{\n//         page: 1,\n//       }}\n//     />\n//   );\n// };\n//\n// SelectAsyncPaginate.propTypes = {\n//   regionName: PropTypes.string.isRequired,\n//   value: PropTypes.object,\n//   onChange: PropTypes.func,\n// };\n//\n// export default SelectAsyncPaginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/apps/weather/src/pages/Home/components/Search/Search.tsx"],"names":["AsyncPaginate","React","useState","PropTypes","Search","onSearchChange","search","setSearch","handleChange","searchData","propTypes","regionName","string","isRequired","value","object","func"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,6BAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAIA,OAAO,MAAMC,MAAM,GAAIC,cAAD,IAA2B;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMM,YAAY,GAAIC,UAAD,IAAwB;AAC3CF,IAAAA,SAAS,CAACE,UAAD,CAAT;AACD,GAFD,CAF+C,CAK/C;AACA;;;AACA,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,WAAW,EAAC,iBADd;AAEE,MAAA,eAAe,EAAE,GAFnB;AAGE,MAAA,KAAK,EAAEH,MAHT;AAIE,MAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjBM;;GAAMJ,M;;KAAAA,M;AAmBbA,MAAM,CAACM,SAAP,GAAmB;AACjBC,EAAAA,UAAU,EAAER,SAAS,CAACS,MAAV,CAAiBC,UADZ;AAEjBC,EAAAA,KAAK,EAAEX,SAAS,CAACY,MAFA;AAGjBP,EAAAA,YAAY,EAAEL,SAAS,CAACa;AAHP,CAAnB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { AsyncPaginate } from 'react-select-async-paginate';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\ninterface Props {}\n\nexport const Search = (onSearchChange: Props) => {\n  const [search, setSearch] = useState('');\n  const handleChange = (searchData: string) => {\n    setSearch(searchData);\n  };\n  // @ts-ignore\n  // @ts-ignore\n  return (\n    <div>\n      <AsyncPaginate\n        placeholder=\"Search the city\"\n        debounceTimeout={600}\n        value={search}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  regionName: PropTypes.string.isRequired,\n  value: PropTypes.object,\n  handleChange: PropTypes.func,\n};\n\n// const SelectAsyncPaginate = props => {\n//   const [regionName, setRegionName] = useState(null);\n//\n//   useEffect(() => {\n//     setRegionName(props.regionName);\n//   }, [props.regionName]);\n//\n//   const loadOptions = async (searchQuery, loadedOptions, { page }) => {\n//     console.log(searchQuery);\n//\n//     const response = await fetch(\n//       `https://www.anapioficeandfire.com/api/houses?region=${regionName}&page=${page}&pageSize=10`,\n//     );\n//     const responseJSON = await response.json();\n//\n//     return {\n//       options: responseJSON,\n//       hasMore: responseJSON.length >= 1,\n//       additional: {\n//         page: searchQuery ? 2 : page + 1,\n//       },\n//     };\n//   };\n//\n//   const onChange = option => {\n//     if (typeof props.onChange === 'function') {\n//       props.onChange(option);\n//     }\n//   };\n//\n//   return (\n//     <AsyncPaginate\n//       key={JSON.stringify(regionName)}\n//       value={props.value || ''}\n//       loadOptions={loadOptions}\n//       getOptionValue={option => option.name}\n//       getOptionLabel={option => option.name}\n//       onChange={onChange}\n//       isSearchable={true}\n//       placeholder=\"Select House\"\n//       additional={{\n//         page: 1,\n//       }}\n//     />\n//   );\n// };\n//\n// SelectAsyncPaginate.propTypes = {\n//   regionName: PropTypes.string.isRequired,\n//   value: PropTypes.object,\n//   onChange: PropTypes.func,\n// };\n//\n// export default SelectAsyncPaginate;\n"]},"metadata":{},"sourceType":"module"}