{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  weather: {\n    name: '',\n    main: {\n      temp: 0,\n      feels_like: 0,\n      humidity: 0,\n      pressure: 0,\n      temp_max: 0,\n      temp_min: 0\n    },\n    sys: {\n      country: ''\n    },\n    wind: {}\n  },\n  isLoading: false,\n  response: {\n    status: 0,\n    message: ''\n  }\n};\nexport const currentWeatherSlice = createSlice({\n  name: 'current_weather',\n  initialState,\n  reducers: {\n    fetchCurrentWeather(state) {\n      state.isLoading = true;\n    },\n\n    fetchCurrentWeatherSuccess(state, action) {\n      state.weather = action.payload.data;\n      state.isLoading = false;\n      state.response = {\n        status: action.payload.status,\n        message: action.payload.statusText\n      };\n    },\n\n    fetchCurrentWeatherError(state, action) {\n      state.isLoading = false;\n      state.response = {\n        status: action.payload.status,\n        message: action.payload.statusText\n      };\n    }\n\n  }\n});\nexport default currentWeatherSlice.reducer;","map":{"version":3,"sources":["C:/apps/weather/src/store/slices/currentWeatherSlice.tsx"],"names":["createSlice","initialState","weather","name","main","temp","feels_like","humidity","pressure","temp_max","temp_min","sys","country","wind","isLoading","response","status","message","currentWeatherSlice","reducers","fetchCurrentWeather","state","fetchCurrentWeatherSuccess","action","payload","data","statusText","fetchCurrentWeatherError","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAeA,MAAMC,YAA4B,GAAG;AACnCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,EADC;AAEPC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,UAAU,EAAE,CAFR;AAGJC,MAAAA,QAAQ,EAAE,CAHN;AAIJC,MAAAA,QAAQ,EAAE,CAJN;AAKJC,MAAAA,QAAQ,EAAE,CALN;AAMJC,MAAAA,QAAQ,EAAE;AANN,KAFC;AAUPC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAVE;AAWPC,IAAAA,IAAI,EAAE;AAXC,GAD0B;AAcnCC,EAAAA,SAAS,EAAE,KAdwB;AAenCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CADA;AAERC,IAAAA,OAAO,EAAE;AAFD;AAfyB,CAArC;AAqBA,OAAO,MAAMC,mBAAmB,GAAGlB,WAAW,CAAC;AAC7CG,EAAAA,IAAI,EAAE,iBADuC;AAE7CF,EAAAA,YAF6C;AAG7CkB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzBA,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACD,KAHO;;AAIRQ,IAAAA,0BAA0B,CACxBD,KADwB,EAExBE,MAFwB,EAGxB;AACAF,MAAAA,KAAK,CAACnB,OAAN,GAAgBqB,MAAM,CAACC,OAAP,CAAeC,IAA/B;AACAJ,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAEO,MAAM,CAACC,OAAP,CAAeR,MADR;AAEfC,QAAAA,OAAO,EAAEM,MAAM,CAACC,OAAP,CAAeE;AAFT,OAAjB;AAID,KAdO;;AAeRC,IAAAA,wBAAwB,CACtBN,KADsB,EAEtBE,MAFsB,EAGtB;AACAF,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAEO,MAAM,CAACC,OAAP,CAAeR,MADR;AAEfC,QAAAA,OAAO,EAAEM,MAAM,CAACC,OAAP,CAAeE;AAFT,OAAjB;AAID;;AAxBO;AAHmC,CAAD,CAAvC;AA+BP,eAAeR,mBAAmB,CAACU,OAAnC","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AxiosResponse } from 'axios';\nimport { Weather } from '../types/types';\n\ntype CurrentWeather = {\n  weather: Weather;\n  isLoading: boolean;\n  response: Response;\n};\n\ntype Response = {\n  status: number;\n  message: string;\n};\n\nconst initialState: CurrentWeather = {\n  weather: {\n    name: '',\n    main: {\n      temp: 0,\n      feels_like: 0,\n      humidity: 0,\n      pressure: 0,\n      temp_max: 0,\n      temp_min: 0,\n    },\n    sys: { country: '' },\n    wind: {},\n  },\n  isLoading: false,\n  response: {\n    status: 0,\n    message: '',\n  },\n};\n\nexport const currentWeatherSlice = createSlice({\n  name: 'current_weather',\n  initialState,\n  reducers: {\n    fetchCurrentWeather(state) {\n      state.isLoading = true;\n    },\n    fetchCurrentWeatherSuccess(\n      state,\n      action: PayloadAction<AxiosResponse<Weather>>,\n    ) {\n      state.weather = action.payload.data;\n      state.isLoading = false;\n      state.response = {\n        status: action.payload.status,\n        message: action.payload.statusText,\n      };\n    },\n    fetchCurrentWeatherError(\n      state,\n      action: PayloadAction<AxiosResponse<Weather>>,\n    ) {\n      state.isLoading = false;\n      state.response = {\n        status: action.payload.status,\n        message: action.payload.statusText,\n      };\n    },\n  },\n});\n\nexport default currentWeatherSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}