{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\weather\\\\src\\\\provider\\\\ThemeProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Theme, ThemeContext } from '../context/ThemeContext';\nimport { changeCssRootVariables } from '../model/ChangeCssRootVariables';\nimport { storage } from '../model/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [theme, setTheme] = useState(storage.getItem('theme') || Theme.LIGHT);\n  changeCssRootVariables(theme);\n\n  function changeTheme(theme) {\n    storage.setItem('theme', theme);\n    setTheme(theme);\n    changeCssRootVariables(theme);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      changeTheme\n    },\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeProvider, \"lvRUEt9lRnR1NB0S7Ub5nwqRIK8=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/apps/weather/src/provider/ThemeProvider.tsx"],"names":["useState","Theme","ThemeContext","changeCssRootVariables","storage","ThemeProvider","children","props","theme","setTheme","getItem","LIGHT","changeTheme","setItem"],"mappings":";;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,yBAApC;AACA,SAASC,sBAAT,QAAuC,iCAAvC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAMA,OAAO,MAAMC,aAAa,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAAkC;AAC9D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAChCI,OAAO,CAACM,OAAR,CAAgB,OAAhB,KAA4BT,KAAK,CAACU,KADF,CAAlC;AAGAR,EAAAA,sBAAsB,CAACK,KAAD,CAAtB;;AACA,WAASI,WAAT,CAAqBJ,KAArB,EAAmC;AACjCJ,IAAAA,OAAO,CAACS,OAAR,CAAgB,OAAhB,EAAyBL,KAAzB;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAL,IAAAA,sBAAsB,CAACK,KAAD,CAAtB;AACD;;AACD,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,KADK;AAELI,MAAAA;AAFK,KADT;AAAA,OAKML,KALN;AAAA,cAOGD;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArBM;;GAAMD,a;;KAAAA,a","sourcesContent":["import { ReactNode, useState } from 'react';\r\nimport { Theme, ThemeContext } from '../context/ThemeContext';\r\nimport { changeCssRootVariables } from '../model/ChangeCssRootVariables';\r\nimport { storage } from '../model/storage';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThemeProvider = ({ children, ...props }: Props) => {\r\n  const [theme, setTheme] = useState<Theme>(\r\n    storage.getItem('theme') || Theme.LIGHT,\r\n  );\r\n  changeCssRootVariables(theme);\r\n  function changeTheme(theme: Theme) {\r\n    storage.setItem('theme', theme);\r\n    setTheme(theme);\r\n    changeCssRootVariables(theme);\r\n  }\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        changeTheme,\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}