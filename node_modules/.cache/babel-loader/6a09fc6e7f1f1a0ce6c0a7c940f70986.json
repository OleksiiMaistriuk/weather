{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\apps\\\\weather\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\apps\\\\weather\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { WeatherService } from '../../services/WeatherService';\nimport { currentWeatherSlice } from '../slices/currentWeatherSlice';\nexport var fetchCurrentWeather = function fetchCurrentWeather(payload) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch(currentWeatherSlice.actions.fetchCurrentWeather());\n              _context.next = 4;\n              return WeatherService.getCurrentWeather(payload);\n\n            case 4:\n              res = _context.sent;\n              console.log(res);\n\n              if (res.status === 200) {\n                dispatch(currentWeatherSlice.actions.fetchCurrentWeatherSuccess(res));\n              } else dispatch(currentWeatherSlice.actions.fetchCurrentWeatherError(res));\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["WeatherService","currentWeatherSlice","fetchCurrentWeather","payload","dispatch","actions","getCurrentWeather","res","console","log","status","fetchCurrentWeatherSuccess","fetchCurrentWeatherError"],"sources":["C:/apps/weather/src/store/thunks/fetchCurrentWeather.ts"],"sourcesContent":["import { WeatherService } from '../../services/WeatherService';\r\nimport { currentWeatherSlice } from '../slices/currentWeatherSlice';\r\nimport { AppDispatch } from '../store';\r\n\r\nexport const fetchCurrentWeather =\r\n  (payload: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(currentWeatherSlice.actions.fetchCurrentWeather());\r\n      const res = await WeatherService.getCurrentWeather(payload);\r\n      console.log(res)\r\n      if (res.status === 200) {\r\n        dispatch(currentWeatherSlice.actions.fetchCurrentWeatherSuccess(res));\r\n      } else dispatch(currentWeatherSlice.actions.fetchCurrentWeatherError(res));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,+BAA/B;AACA,SAASC,mBAAT,QAAoC,+BAApC;AAGA,OAAO,IAAMC,mBAAmB,GAC9B,SADWA,mBACX,CAACC,OAAD;EAAA;IAAA,oEAAqB,iBAAOC,QAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAEjBA,QAAQ,CAACH,mBAAmB,CAACI,OAApB,CAA4BH,mBAA5B,EAAD,CAAR;cAFiB;cAAA,OAGCF,cAAc,CAACM,iBAAf,CAAiCH,OAAjC,CAHD;;YAAA;cAGXI,GAHW;cAIjBC,OAAO,CAACC,GAAR,CAAYF,GAAZ;;cACA,IAAIA,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;gBACtBN,QAAQ,CAACH,mBAAmB,CAACI,OAApB,CAA4BM,0BAA5B,CAAuDJ,GAAvD,CAAD,CAAR;cACD,CAFD,MAEOH,QAAQ,CAACH,mBAAmB,CAACI,OAApB,CAA4BO,wBAA5B,CAAqDL,GAArD,CAAD,CAAR;;cAPU;cAAA;;YAAA;cAAA;cAAA;cASjBC,OAAO,CAACC,GAAR;;YATiB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAArB;;IAAA;MAAA;IAAA;EAAA;AAAA,CADK"},"metadata":{},"sourceType":"module"}