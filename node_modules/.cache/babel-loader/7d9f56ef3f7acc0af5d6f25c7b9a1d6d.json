{"ast":null,"code":"import _slicedToArray from\"C:\\\\apps\\\\weather\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useState}from'react';import{AsyncPaginate}from'react-select-async-paginate';import{options}from'../../../../axios/geoApiOptions';import{jsx as _jsx}from\"react/jsx-runtime\";export var Search=function Search(onSearchChange){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var handleChange=function handleChange(optionData){setSearch(optionData);};var loadOptions=function loadOptions(inputValue){return fetch(\"https://wft-geo-db.p.rapidapi.com/v1/geo/cities?minPopulation=1000000&namePrefix=\".concat(inputValue),options).then(function(response){return response.json();}).then(function(response){return{options:response.data.map(function(city){return{value:\"\".concat(city.latitude,\" \").concat(city.longitude),label:\"\".concat(city.name,\" \").concat(city.countryCode)};})};}).catch(function(err){return console.error(err);});};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AsyncPaginate,{placeholder:\"Search the city\",debounceTimeout:600,value:search// @ts-ignore\n,onChange:handleChange// @ts-ignore\n,loadOptions:loadOptions})});};","map":{"version":3,"sources":["C:/apps/weather/src/pages/Home/components/Search/Search.tsx"],"names":["useState","AsyncPaginate","options","Search","onSearchChange","search","setSearch","handleChange","optionData","loadOptions","inputValue","fetch","then","response","json","data","map","city","value","latitude","longitude","label","name","countryCode","catch","err","console","error"],"mappings":"6GAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,aAAT,KAA8B,6BAA9B,CACA,OAASC,OAAT,KAAwB,iCAAxB,C,2CAMA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,cAAD,CAA2B,CAC/C,cAA4BJ,QAAQ,CAAC,EAAD,CAApC,wCAAOK,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,UAAD,CAAwB,CAC3CF,SAAS,CAACE,UAAD,CAAT,CACD,CAFD,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,UAAD,CAAwB,CAC1C,MAAOC,CAAAA,KAAK,4FAC0ED,UAD1E,EAEVR,OAFU,CAAL,CAIJU,IAJI,CAIC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAJT,EAKJF,IALI,CAKC,SAAAC,QAAQ,CAAI,CAChB,MAAO,CACLX,OAAO,CAAEW,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,SAACC,IAAD,CAAe,CACxC,MAAO,CACLC,KAAK,WAAKD,IAAI,CAACE,QAAV,aAAsBF,IAAI,CAACG,SAA3B,CADA,CAELC,KAAK,WAAKJ,IAAI,CAACK,IAAV,aAAkBL,IAAI,CAACM,WAAvB,CAFA,CAAP,CAID,CALQ,CADJ,CAAP,CAQD,CAdI,EAeJC,KAfI,CAeE,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ,EAfL,CAAP,CAgBD,CAjBD,CAmBA,mBACE,kCACE,KAAC,aAAD,EACE,WAAW,CAAC,iBADd,CAEE,eAAe,CAAE,GAFnB,CAGE,KAAK,CAAEpB,MACP;AAJF,CAKE,QAAQ,CAAEE,YACV;AANF,CAQE,WAAW,CAAEE,WARf,EADF,EADF,CAcD,CAxCM","sourcesContent":["import { useState } from 'react';\r\nimport { AsyncPaginate } from 'react-select-async-paginate';\r\nimport { options } from '../../../../axios/geoApiOptions';\r\n\r\ninterface Props {}\r\n\r\ntype MyOption = { label: string; value: number };\r\n\r\nexport const Search = (onSearchChange: Props) => {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const handleChange = (optionData: string) => {\r\n    setSearch(optionData);\r\n  };\r\n\r\n  const loadOptions = (inputValue: string) => {\r\n    return fetch(\r\n      `https://wft-geo-db.p.rapidapi.com/v1/geo/cities?minPopulation=1000000&namePrefix=${inputValue}`,\r\n      options,\r\n    )\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        return {\r\n          options: response.data.map((city: any) => {\r\n            return {\r\n              value: `${city.latitude} ${city.longitude}`,\r\n              label: `${city.name} ${city.countryCode}`,\r\n            };\r\n          }),\r\n        };\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AsyncPaginate\r\n        placeholder=\"Search the city\"\r\n        debounceTimeout={600}\r\n        value={search}\r\n        // @ts-ignore\r\n        onChange={handleChange}\r\n        // @ts-ignore\r\n\r\n        loadOptions={loadOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}