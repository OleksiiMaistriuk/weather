{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\apps\\\\weather\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\apps\\\\weather\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{WeatherService}from'../../services/WeatherService';import{currentWeatherSlice}from'../slices/currentWeatherSlice';export var fetchCurrentWeather=function fetchCurrentWeather(payload){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(currentWeatherSlice.actions.fetchCurrentWeather());_context.next=4;return WeatherService.getCurrentWeather(payload);case 4:res=_context.sent;console.log(res);if(res.status===200){dispatch(currentWeatherSlice.actions.fetchCurrentWeatherSuccess(res));}else dispatch(currentWeatherSlice.actions.fetchCurrentWeatherError(res));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/apps/weather/src/store/thunks/fetchCurrentWeather.ts"],"names":["WeatherService","currentWeatherSlice","fetchCurrentWeather","payload","dispatch","actions","getCurrentWeather","res","console","log","status","fetchCurrentWeatherSuccess","fetchCurrentWeatherError"],"mappings":"4NAAA,OAASA,cAAT,KAA+B,+BAA/B,CACA,OAASC,mBAAT,KAAoC,+BAApC,CAGA,MAAO,IAAMC,CAAAA,mBAAmB,CAC9B,QADWA,CAAAA,mBACX,CAACC,OAAD,iGAAqB,iBAAOC,QAAP,0IAEjBA,QAAQ,CAACH,mBAAmB,CAACI,OAApB,CAA4BH,mBAA5B,EAAD,CAAR,CAFiB,sBAGCF,CAAAA,cAAc,CAACM,iBAAf,CAAiCH,OAAjC,CAHD,QAGXI,GAHW,eAIjBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAIA,GAAG,CAACG,MAAJ,GAAe,GAAnB,CAAwB,CACtBN,QAAQ,CAACH,mBAAmB,CAACI,OAApB,CAA4BM,0BAA5B,CAAuDJ,GAAvD,CAAD,CAAR,CACD,CAFD,IAEOH,CAAAA,QAAQ,CAACH,mBAAmB,CAACI,OAApB,CAA4BO,wBAA5B,CAAqDL,GAArD,CAAD,CAAR,CAPU,+EASjBC,OAAO,CAACC,GAAR,cATiB,oEAArB,gEADK","sourcesContent":["import { WeatherService } from '../../services/WeatherService';\r\nimport { currentWeatherSlice } from '../slices/currentWeatherSlice';\r\nimport { AppDispatch } from '../store';\r\n\r\nexport const fetchCurrentWeather =\r\n  (payload: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(currentWeatherSlice.actions.fetchCurrentWeather());\r\n      const res = await WeatherService.getCurrentWeather(payload);\r\n      console.log(res)\r\n      if (res.status === 200) {\r\n        dispatch(currentWeatherSlice.actions.fetchCurrentWeatherSuccess(res));\r\n      } else dispatch(currentWeatherSlice.actions.fetchCurrentWeatherError(res));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}