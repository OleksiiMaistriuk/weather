{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  weather: {\n    main: {\n      temp: 0,\n      feels_like: 0,\n      humidity: 0,\n      pressure: 0,\n      temp_max: 0,\n      temp_min: 0\n    }\n  },\n  isLoading: false,\n  response: {\n    status: 0,\n    message: ''\n  }\n};\nexport const currentWeatherSlice = createSlice({\n  name: 'current_weather',\n  initialState,\n  reducers: {\n    fetchCurrentWeather(state) {\n      state.isLoading = true;\n    },\n\n    fetchCurrentWeatherSuccess(state, action) {\n      state.weather = action.payload.data;\n      state.isLoading = false;\n      state.response = {\n        status: action.payload.status,\n        message: action.payload.statusText\n      };\n    },\n\n    fetchCurrentWeatherError(state, action) {\n      state.isLoading = false;\n      state.response = {\n        status: action.payload.status,\n        message: action.payload.statusText\n      };\n    }\n\n  }\n});\nexport default currentWeatherSlice.reducer;","map":{"version":3,"sources":["C:/apps/weather/src/store/slices/currentWeatherSlice.tsx"],"names":["createSlice","initialState","weather","main","temp","feels_like","humidity","pressure","temp_max","temp_min","isLoading","response","status","message","currentWeatherSlice","name","reducers","fetchCurrentWeather","state","fetchCurrentWeatherSuccess","action","payload","data","statusText","fetchCurrentWeatherError","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAeA,MAAMC,YAA4B,GAAG;AACnCC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAcC,MAAAA,UAAU,EAC3C,CADmB;AAEnBC,MAAAA,QAAQ,EACF,CAHa;AAInBC,MAAAA,QAAQ,EACF,CALa;AAMnBC,MAAAA,QAAQ,EACF,CAPa;AAQnBC,MAAAA,QAAQ,EACF;AATa;AAAR,GAD0B;AAWnCC,EAAAA,SAAS,EAAE,KAXwB;AAYnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CADA;AAERC,IAAAA,OAAO,EAAE;AAFD;AAZyB,CAArC;AAkBA,OAAO,MAAMC,mBAAmB,GAAGd,WAAW,CAAC;AAC7Ce,EAAAA,IAAI,EAAE,iBADuC;AAE7Cd,EAAAA,YAF6C;AAG7Ce,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAHO;;AAIRS,IAAAA,0BAA0B,CACxBD,KADwB,EAExBE,MAFwB,EAGxB;AACAF,MAAAA,KAAK,CAAChB,OAAN,GAAgBkB,MAAM,CAACC,OAAP,CAAeC,IAA/B;AACAJ,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAEQ,MAAM,CAACC,OAAP,CAAeT,MADR;AAEfC,QAAAA,OAAO,EAAEO,MAAM,CAACC,OAAP,CAAeE;AAFT,OAAjB;AAID,KAdO;;AAeRC,IAAAA,wBAAwB,CACtBN,KADsB,EAEtBE,MAFsB,EAGtB;AACAF,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAEQ,MAAM,CAACC,OAAP,CAAeT,MADR;AAEfC,QAAAA,OAAO,EAAEO,MAAM,CAACC,OAAP,CAAeE;AAFT,OAAjB;AAID;;AAxBO;AAHmC,CAAD,CAAvC;AA+BP,eAAeT,mBAAmB,CAACW,OAAnC","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Weather } from '../types/types';\r\n\r\ntype CurrentWeather = {\r\n  weather: Weather;\r\n  isLoading: boolean;\r\n  response: Response;\r\n};\r\n\r\ntype Response = {\r\n  status: number;\r\n  message: string;\r\n};\r\n\r\nconst initialState: CurrentWeather = {\r\n  weather: { main: { temp: 0,    feels_like:\r\n0,\r\nhumidity:\r\n      0,\r\npressure:\r\n      0,\r\ntemp_max:\r\n      0,\r\ntemp_min:\r\n      0, } },\r\n  isLoading: false,\r\n  response: {\r\n    status: 0,\r\n    message: '',\r\n  },\r\n};\r\n\r\nexport const currentWeatherSlice = createSlice({\r\n  name: 'current_weather',\r\n  initialState,\r\n  reducers: {\r\n    fetchCurrentWeather(state) {\r\n      state.isLoading = true;\r\n    },\r\n    fetchCurrentWeatherSuccess(\r\n      state,\r\n      action: PayloadAction<AxiosResponse<Weather>>,\r\n    ) {\r\n      state.weather = action.payload.data;\r\n      state.isLoading = false;\r\n      state.response = {\r\n        status: action.payload.status,\r\n        message: action.payload.statusText,\r\n      };\r\n    },\r\n    fetchCurrentWeatherError(\r\n      state,\r\n      action: PayloadAction<AxiosResponse<Weather>>,\r\n    ) {\r\n      state.isLoading = false;\r\n      state.response = {\r\n        status: action.payload.status,\r\n        message: action.payload.statusText,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport default currentWeatherSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}