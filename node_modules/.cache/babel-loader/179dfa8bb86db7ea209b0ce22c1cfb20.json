{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\weather\\\\src\\\\pages\\\\Home\\\\components\\\\Search\\\\Search.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { AsyncPaginate } from 'react-select-async-paginate';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = onSearchChange => {\n  _s();\n\n  const [search, setSearch] = useState('');\n\n  const handleChange = searchData => {\n    setSearch(searchData);\n  }; // @ts-ignore\n  // @ts-ignore\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n      placeholder: \"Search the city\",\n      debounceTimeout: 600,\n      value: search,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");\n\n_c = Search;\n\nconst SelectAsyncPaginate = props => {\n  _s2();\n\n  const [regionName, setRegionName] = useState(null);\n  useEffect(() => {\n    setRegionName(props.regionName);\n  }, [props.regionName]);\n\n  const loadOptions = async (searchQuery, loadedOptions, _ref) => {\n    let {\n      page\n    } = _ref;\n    console.log(searchQuery);\n    const response = await fetch(`https://www.anapioficeandfire.com/api/houses?region=${regionName}&page=${page}&pageSize=10`);\n    const responseJSON = await response.json();\n    return {\n      options: responseJSON,\n      hasMore: responseJSON.length >= 1,\n      additional: {\n        page: searchQuery ? 2 : page + 1\n      }\n    };\n  };\n\n  const onChange = option => {\n    if (typeof props.onChange === 'function') {\n      props.onChange(option);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    value: props.value || '',\n    loadOptions: loadOptions,\n    getOptionValue: option => option.name,\n    getOptionLabel: option => option.name,\n    onChange: onChange,\n    isSearchable: true,\n    placeholder: \"Select House\",\n    additional: {\n      page: 1\n    }\n  }, JSON.stringify(regionName), false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SelectAsyncPaginate, \"pIKkJznGO8D9sJ6w7ziv1XfzBcA=\");\n\n_c2 = SelectAsyncPaginate;\nSelectAsyncPaginate.propTypes = {\n  regionName: PropTypes.string.isRequired,\n  value: PropTypes.object,\n  onChange: PropTypes.func\n};\nexport default SelectAsyncPaginate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"SelectAsyncPaginate\");","map":{"version":3,"sources":["C:/apps/weather/src/pages/Home/components/Search/Search.tsx"],"names":["AsyncPaginate","React","useEffect","useState","PropTypes","Search","onSearchChange","search","setSearch","handleChange","searchData","SelectAsyncPaginate","props","regionName","setRegionName","loadOptions","searchQuery","loadedOptions","page","console","log","response","fetch","responseJSON","json","options","hasMore","length","additional","onChange","option","value","name","JSON","stringify","propTypes","string","isRequired","object","func"],"mappings":";;;;AAAA,SAASA,aAAT,QAA8B,6BAA9B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAIA,OAAO,MAAMC,MAAM,GAAIC,cAAD,IAA2B;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMM,YAAY,GAAIC,UAAD,IAAwB;AAC3CF,IAAAA,SAAS,CAACE,UAAD,CAAT;AACD,GAFD,CAF+C,CAK/C;AACA;;;AACA,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,WAAW,EAAC,iBADd;AAEE,MAAA,eAAe,EAAE,GAFnB;AAGE,MAAA,KAAK,EAAEH,MAHT;AAIE,MAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjBM;;GAAMJ,M;;KAAAA,M;;AAmBb,MAAMM,mBAAmB,GAAGC,KAAK,IAAI;AAAA;;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAACF,KAAK,CAACC,UAAP,CAAb;AACD,GAFQ,EAEN,CAACD,KAAK,CAACC,UAAP,CAFM,CAAT;;AAIA,QAAME,WAAW,GAAG,OAAOC,WAAP,EAAoBC,aAApB,WAAgD;AAAA,QAAb;AAAEC,MAAAA;AAAF,KAAa;AAClEC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CACzB,uDAAsDT,UAAW,SAAQK,IAAK,cADrD,CAA5B;AAGA,UAAMK,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AAEA,WAAO;AACLC,MAAAA,OAAO,EAAEF,YADJ;AAELG,MAAAA,OAAO,EAAEH,YAAY,CAACI,MAAb,IAAuB,CAF3B;AAGLC,MAAAA,UAAU,EAAE;AACVV,QAAAA,IAAI,EAAEF,WAAW,GAAG,CAAH,GAAOE,IAAI,GAAG;AADrB;AAHP,KAAP;AAOD,GAfD;;AAiBA,QAAMW,QAAQ,GAAGC,MAAM,IAAI;AACzB,QAAI,OAAOlB,KAAK,CAACiB,QAAb,KAA0B,UAA9B,EAA0C;AACxCjB,MAAAA,KAAK,CAACiB,QAAN,CAAeC,MAAf;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,aAAD;AAEE,IAAA,KAAK,EAAElB,KAAK,CAACmB,KAAN,IAAe,EAFxB;AAGE,IAAA,WAAW,EAAEhB,WAHf;AAIE,IAAA,cAAc,EAAEe,MAAM,IAAIA,MAAM,CAACE,IAJnC;AAKE,IAAA,cAAc,EAAEF,MAAM,IAAIA,MAAM,CAACE,IALnC;AAME,IAAA,QAAQ,EAAEH,QANZ;AAOE,IAAA,YAAY,EAAE,IAPhB;AAQE,IAAA,WAAW,EAAC,cARd;AASE,IAAA,UAAU,EAAE;AACVX,MAAAA,IAAI,EAAE;AADI;AATd,KACOe,IAAI,CAACC,SAAL,CAAerB,UAAf,CADP;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA7CD;;IAAMF,mB;;MAAAA,mB;AA+CNA,mBAAmB,CAACwB,SAApB,GAAgC;AAC9BtB,EAAAA,UAAU,EAAET,SAAS,CAACgC,MAAV,CAAiBC,UADC;AAE9BN,EAAAA,KAAK,EAAE3B,SAAS,CAACkC,MAFa;AAG9BT,EAAAA,QAAQ,EAAEzB,SAAS,CAACmC;AAHU,CAAhC;AAMA,eAAe5B,mBAAf","sourcesContent":["import { AsyncPaginate } from 'react-select-async-paginate';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\ninterface Props {}\n\nexport const Search = (onSearchChange: Props) => {\n  const [search, setSearch] = useState('');\n  const handleChange = (searchData: string) => {\n    setSearch(searchData);\n  };\n  // @ts-ignore\n  // @ts-ignore\n  return (\n    <div>\n      <AsyncPaginate\n        placeholder=\"Search the city\"\n        debounceTimeout={600}\n        value={search}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nconst SelectAsyncPaginate = props => {\n  const [regionName, setRegionName] = useState(null);\n\n  useEffect(() => {\n    setRegionName(props.regionName);\n  }, [props.regionName]);\n\n  const loadOptions = async (searchQuery, loadedOptions, { page }) => {\n    console.log(searchQuery);\n\n    const response = await fetch(\n      `https://www.anapioficeandfire.com/api/houses?region=${regionName}&page=${page}&pageSize=10`,\n    );\n    const responseJSON = await response.json();\n\n    return {\n      options: responseJSON,\n      hasMore: responseJSON.length >= 1,\n      additional: {\n        page: searchQuery ? 2 : page + 1,\n      },\n    };\n  };\n\n  const onChange = option => {\n    if (typeof props.onChange === 'function') {\n      props.onChange(option);\n    }\n  };\n\n  return (\n    <AsyncPaginate\n      key={JSON.stringify(regionName)}\n      value={props.value || ''}\n      loadOptions={loadOptions}\n      getOptionValue={option => option.name}\n      getOptionLabel={option => option.name}\n      onChange={onChange}\n      isSearchable={true}\n      placeholder=\"Select House\"\n      additional={{\n        page: 1,\n      }}\n    />\n  );\n};\n\nSelectAsyncPaginate.propTypes = {\n  regionName: PropTypes.string.isRequired,\n  value: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default SelectAsyncPaginate;\n"]},"metadata":{},"sourceType":"module"}