{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toPropertyKey from \"@babel/runtime/helpers/toPropertyKey\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport sleep from 'sleep-promise';\nimport useIsMountedRef from 'use-is-mounted-ref';\nimport { defaultShouldLoadMore } from './defaultShouldLoadMore';\nimport { defaultReduceOptions } from './defaultReduceOptions';\nvar errorText = '[react-select-async-paginate] response of \"loadOptions\" should be an object with \"options\" prop, which contains array of options.';\nexport var validateResponse = function validateResponse(console, response) {\n  if (!response) {\n    console.error(errorText, 'Received:', response);\n    throw new Error(errorText);\n  }\n\n  if (!Array.isArray(response.options)) {\n    console.error(errorText, 'Received:', response);\n    throw new Error(errorText);\n  }\n};\nexport var getInitialOptionsCache = function getInitialOptionsCache(_ref) {\n  var options = _ref.options,\n      defaultOptions = _ref.defaultOptions,\n      additional = _ref.additional,\n      defaultAdditional = _ref.defaultAdditional;\n  var initialOptions = defaultOptions === true ? null : defaultOptions instanceof Array ? defaultOptions : options;\n\n  if (initialOptions) {\n    return {\n      '': {\n        isFirstLoad: false,\n        isLoading: false,\n        options: initialOptions,\n        hasMore: true,\n        additional: defaultAdditional || additional\n      }\n    };\n  }\n\n  return {};\n};\nexport var getInitialCache = function getInitialCache(params) {\n  return {\n    isFirstLoad: true,\n    options: [],\n    hasMore: true,\n    isLoading: false,\n    additional: params.additional\n  };\n};\nexport var requestOptions = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(caller, paramsRef, optionsCacheRef, debounceTimeout, sleepParam, setOptionsCache, validateResponseParam, reduceOptions) {\n    var currentInputValue, isCacheEmpty, currentOptions, newInputValue, response, hasError, loadOptions, _response, options, hasMore, newAdditional;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            currentInputValue = paramsRef.current.inputValue;\n            isCacheEmpty = !optionsCacheRef.current[currentInputValue];\n            currentOptions = isCacheEmpty ? getInitialCache(paramsRef.current) : optionsCacheRef.current[currentInputValue];\n\n            if (!(currentOptions.isLoading || !currentOptions.hasMore)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            setOptionsCache(function (prevOptionsCache) {\n              return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n                isLoading: true\n              })));\n            });\n\n            if (!(debounceTimeout > 0 && caller === 'input-change')) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 9;\n            return sleepParam(debounceTimeout);\n\n          case 9:\n            newInputValue = paramsRef.current.inputValue;\n\n            if (!(currentInputValue !== newInputValue)) {\n              _context.next = 13;\n              break;\n            }\n\n            setOptionsCache(function (prevOptionsCache) {\n              if (isCacheEmpty) {\n                var itemForDelete = prevOptionsCache[currentInputValue],\n                    restCache = _objectWithoutProperties(prevOptionsCache, [currentInputValue].map(_toPropertyKey));\n\n                return restCache;\n              }\n\n              return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n                isLoading: false\n              })));\n            });\n            return _context.abrupt(\"return\");\n\n          case 13:\n            _context.prev = 13;\n            loadOptions = paramsRef.current.loadOptions;\n            _context.next = 17;\n            return loadOptions(currentInputValue, currentOptions.options, currentOptions.additional);\n\n          case 17:\n            response = _context.sent;\n            hasError = false;\n            _context.next = 24;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](13);\n            hasError = true;\n\n          case 24:\n            if (!hasError) {\n              _context.next = 27;\n              break;\n            }\n\n            setOptionsCache(function (prevOptionsCache) {\n              return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n                isLoading: false\n              })));\n            });\n            return _context.abrupt(\"return\");\n\n          case 27:\n            validateResponseParam(console, response);\n            _response = response, options = _response.options, hasMore = _response.hasMore; // eslint-disable-next-line no-prototype-builtins\n\n            newAdditional = response.hasOwnProperty('additional') ? response.additional : currentOptions.additional;\n            setOptionsCache(function (prevOptionsCache) {\n              return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n                options: reduceOptions(currentOptions.options, options, newAdditional),\n                hasMore: !!hasMore,\n                isLoading: false,\n                isFirstLoad: false,\n                additional: newAdditional\n              })));\n            });\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[13, 21]]);\n  }));\n\n  return function requestOptions(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var increaseStateId = function increaseStateId(prevStateId) {\n  return prevStateId + 1;\n};\nexport var useAsyncPaginateBasePure = function useAsyncPaginateBasePure(useRefParam, useStateParam, useEffectParam, useCallbackParam, validateResponseParam, getInitialOptionsCacheParam, requestOptionsParam, params) {\n  var deps = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : [];\n  var defaultOptions = params.defaultOptions,\n      _params$loadOptionsOn = params.loadOptionsOnMenuOpen,\n      loadOptionsOnMenuOpen = _params$loadOptionsOn === void 0 ? true : _params$loadOptionsOn,\n      _params$debounceTimeo = params.debounceTimeout,\n      debounceTimeout = _params$debounceTimeo === void 0 ? 0 : _params$debounceTimeo,\n      inputValue = params.inputValue,\n      menuIsOpen = params.menuIsOpen,\n      _params$filterOption = params.filterOption,\n      filterOption = _params$filterOption === void 0 ? null : _params$filterOption,\n      _params$reduceOptions = params.reduceOptions,\n      reduceOptions = _params$reduceOptions === void 0 ? defaultReduceOptions : _params$reduceOptions,\n      _params$shouldLoadMor = params.shouldLoadMore,\n      shouldLoadMore = _params$shouldLoadMor === void 0 ? defaultShouldLoadMore : _params$shouldLoadMor;\n  var isMountedRef = useIsMountedRef();\n  var isInitRef = useRefParam(true);\n  var paramsRef = useRefParam(params);\n  paramsRef.current = params;\n  var setStateId = useStateParam(0)[1];\n  var optionsCacheRef = useRefParam(null);\n\n  if (optionsCacheRef.current === null) {\n    optionsCacheRef.current = getInitialOptionsCacheParam(params);\n  }\n\n  var callRequestOptions = useCallbackParam(function (caller) {\n    requestOptionsParam(caller, paramsRef, optionsCacheRef, debounceTimeout, sleep, function (reduceState) {\n      optionsCacheRef.current = reduceState(optionsCacheRef.current);\n\n      if (isMountedRef.current) {\n        setStateId(increaseStateId);\n      }\n    }, validateResponseParam, reduceOptions);\n  }, [debounceTimeout]);\n  var handleScrolledToBottom = useCallbackParam(function () {\n    var currentInputValue = paramsRef.current.inputValue;\n    var currentOptions = optionsCacheRef.current[currentInputValue];\n\n    if (currentOptions) {\n      callRequestOptions('menu-scroll');\n    }\n  }, [callRequestOptions]);\n  useEffectParam(function () {\n    if (isInitRef.current) {\n      isInitRef.current = false;\n    } else {\n      optionsCacheRef.current = {};\n      setStateId(increaseStateId);\n    }\n\n    if (defaultOptions === true) {\n      callRequestOptions('autoload');\n    }\n  }, deps);\n  useEffectParam(function () {\n    if (menuIsOpen && !optionsCacheRef.current[inputValue]) {\n      callRequestOptions('input-change');\n    }\n  }, [inputValue]);\n  useEffectParam(function () {\n    if (menuIsOpen && !optionsCacheRef.current[''] && loadOptionsOnMenuOpen) {\n      callRequestOptions('menu-toggle');\n    }\n  }, [menuIsOpen]);\n  var currentOptions = optionsCacheRef.current[inputValue] || getInitialCache(params);\n  return {\n    handleScrolledToBottom: handleScrolledToBottom,\n    shouldLoadMore: shouldLoadMore,\n    filterOption: filterOption,\n    isLoading: currentOptions.isLoading,\n    isFirstLoad: currentOptions.isFirstLoad,\n    options: currentOptions.options\n  };\n};\nexport var useAsyncPaginateBase = function useAsyncPaginateBase(params) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return useAsyncPaginateBasePure(useRef, useState, useEffect, useCallback, validateResponse, getInitialOptionsCache, requestOptions, params, deps);\n};","map":null,"metadata":{},"sourceType":"module"}