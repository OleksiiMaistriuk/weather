{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\weather\\\\src\\\\pages\\\\Home\\\\components\\\\Search\\\\Search.tsx\",\n    _s = $RefreshSig$();\n\nimport { AsyncPaginate } from 'react-select-async-paginate';\nimport { useState } from 'react';\nimport { options } from '../../../../axios/geoApiOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = onSearchChange => {\n  _s();\n\n  const [search, setSearch] = useState('');\n\n  const handleChange = optionData => {\n    setSearch(optionData);\n  };\n\n  const loadOptions = inputValue => {\n    return fetch(`${process.env.GEO_APP_API_URL}/sities?`, options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n      placeholder: \"Search the city\",\n      debounceTimeout: 600,\n      value: search // @ts-ignore\n      ,\n      onChange: handleChange // @ts-ignore\n      ,\n      loadOptions: loadOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/apps/weather/src/pages/Home/components/Search/Search.tsx"],"names":["AsyncPaginate","useState","options","Search","onSearchChange","search","setSearch","handleChange","optionData","loadOptions","inputValue","fetch","process","env","GEO_APP_API_URL","then","response","json","console","log","catch","err","error"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,6BAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,iCAAxB;;AAMA,OAAO,MAAMC,MAAM,GAAIC,cAAD,IAA2B;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMM,YAAY,GAAIC,UAAD,IAAwB;AAC3CF,IAAAA,SAAS,CAACE,UAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAIC,UAAD,IAAwB;AAC1C,WAAOC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,eAAgB,UAAhC,EAA2CZ,OAA3C,CAAL,CACJa,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECC,QAAQ,IAAIE,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAFb,EAGJI,KAHI,CAGEC,GAAG,IAAIH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAHT,CAAP;AAID,GALD;;AAOA,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,WAAW,EAAC,iBADd;AAEE,MAAA,eAAe,EAAE,GAFnB;AAGE,MAAA,KAAK,EAAEhB,MAHT,CAGiB;AAHjB;AAIE,MAAA,QAAQ,EAAEE,YAJZ,CAI0B;AAJ1B;AAKE,MAAA,WAAW,EAAEE;AALf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBM;;GAAMN,M;;KAAAA,M","sourcesContent":["import { AsyncPaginate } from 'react-select-async-paginate';\nimport { useState } from 'react';\nimport { options } from '../../../../axios/geoApiOptions';\n\ninterface Props {}\n\ntype MyOption = { label: string; value: number };\n\nexport const Search = (onSearchChange: Props) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = (optionData: string) => {\n    setSearch(optionData);\n  };\n\n  const loadOptions = (inputValue: string) => {\n    return fetch(`${process.env.GEO_APP_API_URL}/sities?`, options)\n      .then(response => response.json())\n      .then(response => console.log(response))\n      .catch(err => console.error(err));\n  };\n\n  return (\n    <div>\n      <AsyncPaginate\n        placeholder=\"Search the city\"\n        debounceTimeout={600}\n        value={search} // @ts-ignore\n        onChange={handleChange} // @ts-ignore\n        loadOptions={loadOptions}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}