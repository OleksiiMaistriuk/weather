{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction composeRefs() {\n  var refs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    refs[_i] = arguments[_i];\n  }\n\n  if (refs.length === 2) {\n    // micro-optimize the hot path\n    return composeTwoRefs(refs[0], refs[1]) || null;\n  }\n\n  var composedRef = refs.slice(1).reduce(function (semiCombinedRef, refToInclude) {\n    return composeTwoRefs(semiCombinedRef, refToInclude);\n  }, refs[0]);\n  return composedRef || null;\n}\n\nexports.default = composeRefs;\nvar composedRefCache = new WeakMap();\n\nfunction composeTwoRefs(ref1, ref2) {\n  if (ref1 && ref2) {\n    var ref1Cache = composedRefCache.get(ref1) || new WeakMap();\n    composedRefCache.set(ref1, ref1Cache);\n\n    var composedRef = ref1Cache.get(ref2) || function (instance) {\n      updateRef(ref1, instance);\n      updateRef(ref2, instance);\n    };\n\n    ref1Cache.set(ref2, composedRef);\n    return composedRef;\n  }\n\n  if (!ref1) {\n    return ref2;\n  } else {\n    return ref1;\n  }\n}\n\nfunction updateRef(ref, instance) {\n  if (typeof ref === 'function') {\n    ref(instance);\n  } else {\n    ref.current = instance;\n  }\n}","map":{"version":3,"sources":["C:\\apps\\weather\\node_modules\\@seznam\\compose-react-refs\\composeRefs.ts"],"names":[],"mappings":";;;;;;AAIA,SAAwB,WAAxB,GAAmC;AAAI,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAmE;AAAnE,IAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACrC,MAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;AAAE;AACvB,WAAO,cAAc,CAAC,IAAI,CAAC,CAAD,CAAL,EAAU,IAAI,CAAC,CAAD,CAAd,CAAd,IAAoC,IAA3C;AACD;;AAED,MAAM,WAAW,GAAG,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,MAAd,CAClB,UAAC,eAAD,EAAkC,YAAlC,EAA8D;AAAK,WAAA,cAAc,CAAC,eAAD,EAAd,YAAc,CAAd;AAA6C,GAD9F,EAElB,IAAI,CAAC,CAAD,CAFc,CAApB;AAIA,SAAO,WAAW,IAAI,IAAtB;AACD;;AAVD,OAAA,CAAA,OAAA,GAAA,WAAA;AAaA,IAAM,gBAAgB,GAAG,IAAI,OAAJ,EAAzB;;AAEA,SAAS,cAAT,CAA2B,IAA3B,EAAiD,IAAjD,EAAqE;AACnE,MAAI,IAAI,IAAI,IAAZ,EAAkB;AAChB,QAAM,SAAS,GAAG,gBAAgB,CAAC,GAAjB,CAAqB,IAArB,KAA8B,IAAI,OAAJ,EAAhD;AACA,IAAA,gBAAgB,CAAC,GAAjB,CAAqB,IAArB,EAA2B,SAA3B;;AAEA,QAAM,WAAW,GAAG,SAAS,CAAC,GAAV,CAAc,IAAd,KAAwB,UAAC,QAAD,EAAY;AACtD,MAAA,SAAS,CAAC,IAAD,EAAO,QAAP,CAAT;AACA,MAAA,SAAS,CAAC,IAAD,EAAO,QAAP,CAAT;AACD,KAHD;;AAIA,IAAA,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,WAApB;AAEA,WAAO,WAAP;AACD;;AAED,MAAI,CAAC,IAAL,EAAW;AACT,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAAS,SAAT,CAAsB,GAAtB,EAA0C,QAA1C,EAA4D;AAC1D,MAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B;AAC7B,IAAA,GAAG,CAAC,QAAD,CAAH;AACD,GAFD,MAEO;AACJ,IAAA,GAAkC,CAAC,OAAnC,GAA6C,QAA7C;AACF;AACF","sourcesContent":["import {MutableRefObject, Ref} from 'react'\n\ntype OptionalRef<T> = Ref<T> | undefined\n\nexport default function composeRefs<T>(...refs: [OptionalRef<T>, OptionalRef<T>, ...Array<OptionalRef<T>>]): Ref<T> {\n  if (refs.length === 2) { // micro-optimize the hot path\n    return composeTwoRefs(refs[0], refs[1]) || null\n  }\n\n  const composedRef = refs.slice(1).reduce(\n    (semiCombinedRef: OptionalRef<T>, refToInclude: OptionalRef<T>) => composeTwoRefs(semiCombinedRef, refToInclude),\n    refs[0],\n  )\n  return composedRef || null\n}\n\ntype NonNullRef<T> = NonNullable<Ref<T>>\nconst composedRefCache = new WeakMap<NonNullRef<unknown>, WeakMap<NonNullRef<unknown>, NonNullRef<unknown>>>()\n\nfunction composeTwoRefs<T>(ref1: OptionalRef<T>, ref2: OptionalRef<T>): OptionalRef<T> {\n  if (ref1 && ref2) {\n    const ref1Cache = composedRefCache.get(ref1) || new WeakMap<NonNullRef<unknown>, NonNullRef<unknown>>()\n    composedRefCache.set(ref1, ref1Cache)\n\n    const composedRef = ref1Cache.get(ref2) || ((instance: T): void => {\n      updateRef(ref1, instance)\n      updateRef(ref2, instance)\n    })\n    ref1Cache.set(ref2, composedRef)\n\n    return composedRef as NonNullRef<T>\n  }\n\n  if (!ref1) {\n    return ref2\n  } else {\n    return ref1\n  }\n}\n\nfunction updateRef<T>(ref: NonNullRef<T>, instance: null | T): void {\n  if (typeof ref === 'function') {\n    ref(instance)\n  } else {\n    (ref as MutableRefObject<T | null>).current = instance\n  }\n}\n"]},"metadata":{},"sourceType":"script"}