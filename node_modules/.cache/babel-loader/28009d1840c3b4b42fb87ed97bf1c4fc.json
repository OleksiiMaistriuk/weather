{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport currentWeatherSliceReduser from './slices/currentWeatherSlice';\nvar rootReduser = combineReducers({\n  currentWeatherSliceReduser: currentWeatherSliceReduser\n});\nexport var store = configureStore({\n  reducer: rootReduser,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: false\n    });\n  }\n});","map":{"version":3,"names":["combineReducers","configureStore","currentWeatherSliceReduser","rootReduser","store","reducer","middleware","getDefaultMiddleware","serializableCheck"],"sources":["C:/apps/weather/src/store/store.ts"],"sourcesContent":["import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport currentWeatherSliceReduser from './slices/currentWeatherSlice';\r\n\r\nconst rootReduser = combineReducers({\r\n  currentWeatherSliceReduser,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReduser,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReduser>;\r\nexport type AppStore = typeof store;\r\nexport type AppDispatch = AppStore['dispatch'];\r\n"],"mappings":"AAAA,SACEA,eADF,EAEEC,cAFF,QAIO,kBAJP;AAKA,OAAOC,0BAAP,MAAuC,8BAAvC;AAEA,IAAMC,WAAW,GAAGH,eAAe,CAAC;EAClCE,0BAA0B,EAA1BA;AADkC,CAAD,CAAnC;AAIA,OAAO,IAAME,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAEF,WADyB;EAElCG,UAAU,EAAE,oBAAAC,oBAAoB;IAAA,OAC9BA,oBAAoB,CAAC;MACnBC,iBAAiB,EAAE;IADA,CAAD,CADU;EAAA;AAFE,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}