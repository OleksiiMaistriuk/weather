{"ast":null,"code":"import axios from 'axios';\nimport { apiOptions } from '../../../../axios/geoApiOptions';\n\nconst loadOptions = inputText => {\n  return axios.get(GEO_APP_API_URL + `/cities?minPopulation=100000&namePrefix=${inputText}`, apiOptions).then(response => response.json()).then(response => ({\n    options: response.data.map(city => ({\n      label: `${city.name} ${city.country}`,\n      value: {\n        latitude: city.latitude,\n        longitude: city.longitude\n      }\n    }))\n  })); // const responseJSON = await response.json();\n  // console.log('responseJSON', responseJSON);\n  // return {\n  //   options: responseJSON.data\n  //     .map((city: ICity) => ({\n  //       label: `${city.name} ${city.country}`,\n  //       value: { latitude: city.latitude, longitude: city.longitude },\n  //     }))\n  //     .catch((err: any) => console.log(err)),\n  // };\n};\n\nexport default loadOptions; // import { GroupBase } from 'react-select';\n// import { LoadOptions } from 'react-select-async-paginate';\n// import { apiOptions } from '../../../../axios/geoApiOptions';\n// const loadOptions: LoadOptions<\n//   string,\n//   GroupBase<string>,\n//   any\n// > = async inputText => {\n//   return await fetch(\n//     `https://wft-geo-db.p.rapidapi.com/v1/geo/cities?minPopulation=1000000&namePrefix=${inputText}`,\n//     apiOptions,\n//   )\n//     .then(response => response.json())\n//     .then(response => ({\n//       options: response.data.map((city: ICity) => ({\n//         label: `${city.name} ${city.countryCode}`,\n//         value: { latitude: city.latitude, longitude: city.longitude },\n//       })),\n//     }))\n//     .catch(err => console.error(err));\n// };\n// export default loadOptions;","map":{"version":3,"sources":["C:/apps/weather/src/pages/Home/components/Search/loadOptions.ts"],"names":["axios","apiOptions","loadOptions","inputText","get","GEO_APP_API_URL","then","response","json","options","data","map","city","label","name","country","value","latitude","longitude"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,UAAT,QAA2B,iCAA3B;;AAOA,MAAMC,WAAwD,GAAGC,SAAS,IAAI;AAC5E,SAAOH,KAAK,CACTI,GADI,CAEHC,eAAe,GAAI,2CAA0CF,SAAU,EAFpE,EAGHF,UAHG,EAKJK,IALI,CAKCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALb,EAMJF,IANI,CAMCC,QAAQ,KAAK;AACjBE,IAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAmBC,IAAD,KAAkB;AAC3CC,MAAAA,KAAK,EAAG,GAAED,IAAI,CAACE,IAAK,IAAGF,IAAI,CAACG,OAAQ,EADO;AAE3CC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAEL,IAAI,CAACK,QAAjB;AAA2BC,QAAAA,SAAS,EAAEN,IAAI,CAACM;AAA3C;AAFoC,KAAlB,CAAlB;AADQ,GAAL,CANT,CAAP,CAD4E,CAc5E;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAzBD;;AA0BA,eAAehB,WAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\nimport { GroupBase } from 'react-select';\r\nimport { LoadOptions } from 'react-select-async-paginate';\r\nimport { apiOptions } from '../../../../axios/geoApiOptions';\r\ninterface ICity {\r\n  name: string;\r\n  country: string;\r\n  latitude: string;\r\n  longitude: string;\r\n}\r\nconst loadOptions: LoadOptions<string, GroupBase<string>, any> = inputText => {\r\n  return axios\r\n    .get(\r\n      GEO_APP_API_URL + `/cities?minPopulation=100000&namePrefix=${inputText}`,\r\n      apiOptions,\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => ({\r\n      options: response.data.map((city: ICity) => ({\r\n        label: `${city.name} ${city.country}`,\r\n        value: { latitude: city.latitude, longitude: city.longitude },\r\n      })),\r\n    }));\r\n\r\n  // const responseJSON = await response.json();\r\n\r\n  // console.log('responseJSON', responseJSON);\r\n  // return {\r\n  //   options: responseJSON.data\r\n  //     .map((city: ICity) => ({\r\n  //       label: `${city.name} ${city.country}`,\r\n  //       value: { latitude: city.latitude, longitude: city.longitude },\r\n  //     }))\r\n  //     .catch((err: any) => console.log(err)),\r\n  // };\r\n};\r\nexport default loadOptions;\r\n\r\n// import { GroupBase } from 'react-select';\r\n// import { LoadOptions } from 'react-select-async-paginate';\r\n// import { apiOptions } from '../../../../axios/geoApiOptions';\r\n\r\n// const loadOptions: LoadOptions<\r\n//   string,\r\n//   GroupBase<string>,\r\n//   any\r\n// > = async inputText => {\r\n//   return await fetch(\r\n//     `https://wft-geo-db.p.rapidapi.com/v1/geo/cities?minPopulation=1000000&namePrefix=${inputText}`,\r\n//     apiOptions,\r\n//   )\r\n//     .then(response => response.json())\r\n//     .then(response => ({\r\n//       options: response.data.map((city: ICity) => ({\r\n//         label: `${city.name} ${city.countryCode}`,\r\n//         value: { latitude: city.latitude, longitude: city.longitude },\r\n//       })),\r\n//     }))\r\n//     .catch(err => console.error(err));\r\n// };\r\n// export default loadOptions;\r\n"]},"metadata":{},"sourceType":"module"}