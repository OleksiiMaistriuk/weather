[{"C:\\apps\\weather\\src\\index.tsx":"1","C:\\apps\\weather\\src\\App.tsx":"2","C:\\apps\\weather\\src\\store\\store.ts":"3","C:\\apps\\weather\\src\\provider\\ThemeProvider.tsx":"4","C:\\apps\\weather\\src\\model\\ChangeCssRootVariables.ts":"5","C:\\apps\\weather\\src\\context\\ThemeContext.ts":"6","C:\\apps\\weather\\src\\model\\storage.ts":"7","C:\\apps\\weather\\src\\pages\\Home\\Home.tsx":"8","C:\\apps\\weather\\src\\pages\\MonthStatistic\\MonthStatistic.tsx":"9","C:\\apps\\weather\\src\\shared\\Header\\Header.tsx":"10","C:\\apps\\weather\\src\\hooks\\store.ts":"11","C:\\apps\\weather\\src\\hooks\\useTheme.ts":"12","C:\\apps\\weather\\src\\store\\thunks\\fetchCurrentWeather.ts":"13","C:\\apps\\weather\\src\\pages\\Home\\components\\ThisDay\\ThisDay.tsx":"14","C:\\apps\\weather\\src\\pages\\Home\\components\\ThisDayInfo\\ThisDayInfo.tsx":"15","C:\\apps\\weather\\src\\pages\\Home\\components\\Days\\Days.tsx":"16","C:\\apps\\weather\\src\\assets\\icons\\global\\GlobalSvgSelector.tsx":"17","C:\\apps\\weather\\src\\services\\WeatherService.ts":"18","C:\\apps\\weather\\src\\pages\\Home\\components\\ThisDayInfo\\ThisDayItem.tsx":"19","C:\\apps\\weather\\src\\pages\\Home\\components\\Days\\Card.tsx":"20","C:\\apps\\weather\\src\\pages\\Home\\components\\Days\\Tabs.tsx":"21","C:\\apps\\weather\\src\\assets\\icons\\indicators\\IndicatorSvgSelector.tsx":"22","C:\\apps\\weather\\src\\store\\slices\\currentWeatherSlice.tsx":"23","C:\\apps\\weather\\src\\store\\selectors.ts":"24","C:\\apps\\weather\\src\\axios\\geoApiOptions.ts":"25","C:\\apps\\weather\\src\\axios\\weatherApi.ts":"26","C:\\apps\\weather\\src\\pages\\Home\\components\\Search\\Search.tsx":"27","C:\\apps\\weather\\src\\pages\\Home\\components\\Search\\loadOptions.ts":"28"},{"size":552,"mtime":1665507946942,"results":"29","hashOfConfig":"30"},{"size":696,"mtime":1665603527048,"results":"31","hashOfConfig":"30"},{"size":577,"mtime":1662406187911,"results":"32","hashOfConfig":"30"},{"size":807,"mtime":1664819944666,"results":"33","hashOfConfig":"30"},{"size":475,"mtime":1662138186501,"results":"34","hashOfConfig":"30"},{"size":293,"mtime":1664819803210,"results":"35","hashOfConfig":"30"},{"size":274,"mtime":1662138186501,"results":"36","hashOfConfig":"30"},{"size":878,"mtime":1665603527051,"results":"37","hashOfConfig":"30"},{"size":268,"mtime":1664820393575,"results":"38","hashOfConfig":"30"},{"size":1630,"mtime":1665603527056,"results":"39","hashOfConfig":"30"},{"size":287,"mtime":1662138186501,"results":"40","hashOfConfig":"30"},{"size":153,"mtime":1664819801180,"results":"41","hashOfConfig":"30"},{"size":764,"mtime":1665603527056,"results":"42","hashOfConfig":"30"},{"size":1905,"mtime":1665599081414,"results":"43","hashOfConfig":"30"},{"size":1617,"mtime":1664820393573,"results":"44","hashOfConfig":"30"},{"size":1746,"mtime":1664820393569,"results":"45","hashOfConfig":"30"},{"size":19163,"mtime":1664820393565,"results":"46","hashOfConfig":"30"},{"size":401,"mtime":1665603527054,"results":"47","hashOfConfig":"30"},{"size":617,"mtime":1664820393574,"results":"48","hashOfConfig":"30"},{"size":732,"mtime":1664820393568,"results":"49","hashOfConfig":"30"},{"size":591,"mtime":1664820393569,"results":"50","hashOfConfig":"30"},{"size":21674,"mtime":1664820393566,"results":"51","hashOfConfig":"30"},{"size":1539,"mtime":1662744688084,"results":"52","hashOfConfig":"30"},{"size":136,"mtime":1662575025722,"results":"53","hashOfConfig":"30"},{"size":483,"mtime":1665603527049,"results":"54","hashOfConfig":"30"},{"size":336,"mtime":1665603527050,"results":"55","hashOfConfig":"30"},{"size":1131,"mtime":1665603527053,"results":"56","hashOfConfig":"30"},{"size":2015,"mtime":1665603527054,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1vau785",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\apps\\weather\\src\\index.tsx",[],["118","119"],"C:\\apps\\weather\\src\\App.tsx",[],"C:\\apps\\weather\\src\\store\\store.ts",["120"],"import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport currentWeatherSliceReduser from './slices/currentWeatherSlice';\r\n\r\nconst rootReduser = combineReducers({\r\n  currentWeatherSliceReduser,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReduser,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReduser>;\r\nexport type AppStore = typeof store;\r\nexport type AppDispatch = AppStore['dispatch'];\r\n","C:\\apps\\weather\\src\\provider\\ThemeProvider.tsx",[],"C:\\apps\\weather\\src\\model\\ChangeCssRootVariables.ts",[],"C:\\apps\\weather\\src\\context\\ThemeContext.ts",[],"C:\\apps\\weather\\src\\model\\storage.ts",[],"C:\\apps\\weather\\src\\pages\\Home\\Home.tsx",[],"C:\\apps\\weather\\src\\pages\\MonthStatistic\\MonthStatistic.tsx",[],"C:\\apps\\weather\\src\\shared\\Header\\Header.tsx",["121","122"],"import { GlobalSvgSelector } from '../../assets/icons/global/GlobalSvgSelector';\r\nimport { Theme } from '../../context/ThemeContext';\r\nimport { useTheme } from '../../hooks/useTheme';\r\nimport s from './Header.module.scss';\r\n\r\ninterface Props {}\r\n\r\nexport const Header = (props: Props) => {\r\n  const theme = useTheme();\r\n  const options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n  ];\r\n\r\n  const colorStyles = {\r\n    control: (styles: any) => ({\r\n      ...styles,\r\n      backgroundColor:\r\n        theme.theme === Theme.DARK ? '#4f4f4f' : ' rgba(71, 147, 255, 0.2);',\r\n      width: '194px',\r\n      height: '37px',\r\n      border: 'none',\r\n      borderRadius: '10px',\r\n      zIndex: 100,\r\n    }),\r\n    singleValue: (styles: any) => ({\r\n      ...styles,\r\n      color: theme.theme === Theme.DARK ? '#fff ' : '#000',\r\n    }),\r\n  };\r\n\r\n  function changeTheme() {\r\n    theme.changeTheme(theme.theme === Theme.LIGHT ? Theme.DARK : Theme.LIGHT);\r\n  }\r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <div className={s.wraper}>\r\n        <div className={s.logo}>\r\n          <GlobalSvgSelector id=\"header-logo\" />\r\n        </div>\r\n        <h1 className={s.title}>Weather</h1>\r\n      </div>\r\n      <div className={s.wraper}>\r\n        <div className={s.change_theme} onClick={changeTheme}>\r\n          <GlobalSvgSelector id=\"change-theme\" />\r\n        </div>\r\n        {/* <Select\r\n          defaultValue={options[0]}\r\n          styles={colorStyles}\r\n          options={options}\r\n        /> */}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","C:\\apps\\weather\\src\\hooks\\store.ts",[],"C:\\apps\\weather\\src\\hooks\\useTheme.ts",[],"C:\\apps\\weather\\src\\store\\thunks\\fetchCurrentWeather.ts",[],"C:\\apps\\weather\\src\\pages\\Home\\components\\ThisDay\\ThisDay.tsx",[],"C:\\apps\\weather\\src\\pages\\Home\\components\\ThisDayInfo\\ThisDayInfo.tsx",[],"C:\\apps\\weather\\src\\pages\\Home\\components\\Days\\Days.tsx",[],"C:\\apps\\weather\\src\\assets\\icons\\global\\GlobalSvgSelector.tsx",[],"C:\\apps\\weather\\src\\services\\WeatherService.ts",[],"C:\\apps\\weather\\src\\pages\\Home\\components\\ThisDayInfo\\ThisDayItem.tsx",[],"C:\\apps\\weather\\src\\pages\\Home\\components\\Days\\Card.tsx",[],"C:\\apps\\weather\\src\\pages\\Home\\components\\Days\\Tabs.tsx",[],"C:\\apps\\weather\\src\\assets\\icons\\indicators\\IndicatorSvgSelector.tsx",[],"C:\\apps\\weather\\src\\store\\slices\\currentWeatherSlice.tsx",[],"C:\\apps\\weather\\src\\store\\selectors.ts",[],"C:\\apps\\weather\\src\\axios\\geoApiOptions.ts",[],"C:\\apps\\weather\\src\\axios\\weatherApi.ts",["123"],"import axios from 'axios';\r\nimport { WEATHER_APP_API_KEY, WEATHER_APP_API_URL } from '../.tokens';\r\n\r\nconst api = axios.create({\r\n  baseURL: WEATHER_APP_API_URL,\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n  config.url = config.url + '&units=metric' + `&appid=${WEATHER_APP_API_KEY}`;\r\n  return config;\r\n});\r\nexport default api;\r\n","C:\\apps\\weather\\src\\pages\\Home\\components\\Search\\Search.tsx",[],"C:\\apps\\weather\\src\\pages\\Home\\components\\Search\\loadOptions.ts",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":4,"column":3,"nodeType":"130","messageId":"131","endLine":4,"endColumn":23},{"ruleId":"128","severity":1,"message":"132","line":10,"column":9,"nodeType":"130","messageId":"131","endLine":10,"endColumn":16},{"ruleId":"128","severity":1,"message":"133","line":16,"column":9,"nodeType":"130","messageId":"131","endLine":16,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":9,"column":45,"nodeType":"136","messageId":"137","endLine":9,"endColumn":46},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'getDefaultMiddleware' is defined but never used.","Identifier","unusedVar","'options' is assigned a value but never used.","'colorStyles' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]